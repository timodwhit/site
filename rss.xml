<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Tim's RSS Feed]]></title><description><![CDATA[Personal Site for Tim Whitney]]></description><link>http://timwhitney.dev</link><generator>GatsbyJS</generator><lastBuildDate>Wed, 07 Oct 2020 01:41:08 GMT</lastBuildDate><item><title><![CDATA[What goes in a spoon?]]></title><description><![CDATA[Who decides what is spoon appropriate? Cereal and Milk? Check Potatoes and broth? Check Pretzels and Hummus? Nope Chips and Salsa? Nope…]]></description><link>http://timwhitney.dev/blog/spoonfuls/</link><guid isPermaLink="false">http://timwhitney.dev/blog/spoonfuls/</guid><pubDate>Wed, 07 Oct 2020 01:28:00 GMT</pubDate><content:encoded>&lt;p&gt;Who decides what is spoon appropriate?&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Cereal and Milk? Check&lt;/li&gt;
&lt;li&gt;Potatoes and broth? Check&lt;/li&gt;
&lt;li&gt;Pretzels and Hummus? Nope&lt;/li&gt;
&lt;li&gt;Chips and Salsa? Nope&lt;/li&gt;
&lt;li&gt;Chips and Dip? Nope&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Here is the fucking problem: What happens when you get down to the bottom of the bag of the pretzels and/or chips? Because society tells us we
should be ashamed of looking fat eating chips and dip with a spoon, we don&apos;t do it. And we should. &lt;/p&gt;
&lt;p&gt;So people, eat your damned chips and salsa any way you please. If you eat with chopsticks, good on you. Eat it with a spoon, I get it. But don&apos;t let
perfectly good chips and dip go to waste because you feel it is too indulgent to get it with a spoon.&lt;/p&gt;</content:encoded></item><item><title><![CDATA[My Logo]]></title><description><![CDATA[Where I started Tiger Woods. He has a great logo with my initials. Don't copy that. Then, I drew some logos, wrote out my initials, signed…]]></description><link>http://timwhitney.dev/blog/logo/</link><guid isPermaLink="false">http://timwhitney.dev/blog/logo/</guid><pubDate>Sun, 03 May 2020 16:30:00 GMT</pubDate><content:encoded>&lt;h2&gt;Where I started&lt;/h2&gt;
&lt;p&gt;Tiger Woods. He has a great logo with my initials. Don&apos;t copy that.&lt;/p&gt;
&lt;p&gt;Then, I drew some logos, wrote out my initials, signed the page with my initials,
signed it with my full signature. Altered all that and tried again.&lt;/p&gt;
&lt;p&gt;Turns out: My name does not belong on a bottle of cologne yet.&lt;/p&gt;
&lt;h2&gt;Middle of the Road Idea&lt;/h2&gt;
&lt;p&gt;When signing my initials, I often make a 7 and then follow it with a half baked
W, more like a /. That transformed into 7/.&lt;/p&gt;
&lt;p&gt;This turned into making sure // was in my logo and if I could accommodate ://
all the better.&lt;/p&gt;
&lt;p&gt;The lowercase t in it&apos;s negative space creates a colon. An uppercase W contains
the //.&lt;/p&gt;
&lt;h2&gt;Final Design&lt;/h2&gt;
&lt;p&gt;t//.&lt;/p&gt;</content:encoded></item><item><title><![CDATA[Why Gatsby was my choice]]></title><description><![CDATA[Background I have been a Drupal developer since 2010. At that time, I had 0 development
experience and I didn't know HTML, CSS, PHP, etc. I…]]></description><link>http://timwhitney.dev/blog/gatsby/</link><guid isPermaLink="false">http://timwhitney.dev/blog/gatsby/</guid><pubDate>Sun, 03 May 2020 16:00:00 GMT</pubDate><content:encoded>&lt;h2&gt;Background&lt;/h2&gt;
&lt;p&gt;I have been a Drupal developer since 2010. At that time, I had 0 development
experience and I didn&apos;t know HTML, CSS, PHP, etc. I fell into a situation where
the small mom-and-pop operation needed a commerce website to sell their product.
And with 0 knowledge in my pocket I felt I could build a site.&lt;/p&gt;
&lt;p&gt;I asked my friend who was doing web development and she said &quot;You should build a
Drupal site&quot;. Drupal 7.x just launched (I believe it was in BC), and drupal commerce
1.x had just come out. So building a commerce site on Drupal was definitely the
way to go.&lt;/p&gt;
&lt;p&gt;Since then, I have cut my teeth quite a bit, I have learned a lot and have built
countless websites with the beautiful codebase and contrib modules that comprise
the Drupal ecosystem. There are things I love and things I loathe, but I know it
quite well to whip up this simple blog without hesitation.&lt;/p&gt;
&lt;p&gt;But I chose not to.&lt;/p&gt;
&lt;h2&gt;Why&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;A friend told me about &lt;a href=&quot;https://www.gatsbyjs.org/&quot;&gt;Gatsby&lt;/a&gt;. I listen.&lt;/li&gt;
&lt;li&gt;I&apos;m cheap. I don&apos;t want to pay for hosting this site.&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;My time is worth something.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;I don&apos;t want to spin up a server to host this website. (Can I, yes. Should I, no.)&lt;/li&gt;
&lt;li&gt;I don&apos;t want to maintain a server with my blog on it. I do that enough in my
day to day affairs&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Gatsby is built on React&lt;/li&gt;
&lt;li&gt;Drupal is coupling with React&lt;/li&gt;
&lt;li&gt;I love writing my posts in Markdown.&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;Why I regret it&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;My time is worth something.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;While I learned a lot with this project, I&apos;m not sure it was overly useful
or the time savings I was expecting&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Because this is my first react project, I&apos;m not sure what is specific to
Gatsby and what is best practice.  See the above point about time.&lt;/li&gt;
&lt;li&gt;I traded the complexity of Drupal/Modules for Node/Packages. When I come back
to this in a year to do some dev work, how many things will be out of date and
how easy will it be to fix it? Time will tell.&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;Lessons Learned&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;Have fun.&lt;/li&gt;
&lt;li&gt;Templates are always the best way to learn. Take it apart, focus on it and
really ingest what is happening.&lt;/li&gt;
&lt;li&gt;I missed writing.&lt;/li&gt;
&lt;/ol&gt;</content:encoded></item><item><title><![CDATA[Make it an object please!]]></title><description><![CDATA[Objects in PHP have been around for a while now. And objects in Drupal have as well, but Drupal was predominately filled (and still suffers…]]></description><link>http://timwhitney.dev/blog/currency-object/</link><guid isPermaLink="false">http://timwhitney.dev/blog/currency-object/</guid><pubDate>Sun, 03 May 2020 15:00:00 GMT</pubDate><content:encoded>&lt;p&gt;Objects in PHP have been around for a while now. And objects in Drupal have as well, but Drupal was predominately filled (and still suffers the fate) of being tied to
arrays and their inherent inability to expose what can and can&apos;t be on an object.&lt;/p&gt;
&lt;p&gt;Here is an example of a useful object when working on sites that may have
different display variants for a currency.&lt;/p&gt;
&lt;h3&gt;Array Version&lt;/h3&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;php&quot;&gt;&lt;pre class=&quot;language-php&quot;&gt;&lt;code class=&quot;language-php&quot;&gt;&lt;span class=&quot;token variable&quot;&gt;$currency&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;
  &lt;span class=&quot;token single-quoted-string string&quot;&gt;&apos;suffix&apos;&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt; &lt;span class=&quot;token single-quoted-string string&quot;&gt;&apos;$&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;token single-quoted-string string&quot;&gt;&apos;prefix&apos;&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt; &lt;span class=&quot;token single-quoted-string string&quot;&gt;&apos; USD&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;token single-quoted-string string&quot;&gt;&apos;decimal-count&apos;&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt;  &lt;span class=&quot;token number&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;token single-quoted-string string&quot;&gt;&apos;decimal-separator&apos;&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt; &lt;span class=&quot;token single-quoted-string string&quot;&gt;&apos;.&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;token single-quoted-string string&quot;&gt;&apos;thousands-separator&apos;&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt; &lt;span class=&quot;token single-quoted-string string&quot;&gt;&apos;,&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Not too bad.. And let&apos;s create a function to auto generate that array for ease
of use and possible debugging.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;php&quot;&gt;&lt;pre class=&quot;language-php&quot;&gt;&lt;code class=&quot;language-php&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;/**
 * Create a currency array.
 *
 * @param string $suffix
 * @param string $prefix
 * @param string $decimalCount
 * @param string $decimalSeparator
 * @param string $thousandsSeparator
 */&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;getCurrencyFormat&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token variable&quot;&gt;$suffix&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token single-quoted-string string&quot;&gt;&apos;$&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token variable&quot;&gt;$prefix&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token single-quoted-string string&quot;&gt;&apos; USD&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token variable&quot;&gt;$decimalCount&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token single-quoted-string string&quot;&gt;&apos;2&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token variable&quot;&gt;$decimalSeparator&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token single-quoted-string string&quot;&gt;&apos;.&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token variable&quot;&gt;$thousandsSeparator&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token single-quoted-string string&quot;&gt;&apos;,&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;
    &lt;span class=&quot;token single-quoted-string string&quot;&gt;&apos;suffix&apos;&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt; &lt;span class=&quot;token variable&quot;&gt;$suffix&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;token single-quoted-string string&quot;&gt;&apos;prefix&apos;&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt; &lt;span class=&quot;token variable&quot;&gt;$prefix&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;token single-quoted-string string&quot;&gt;&apos;decimal-count&apos;&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt;  &lt;span class=&quot;token variable&quot;&gt;$decimalCount&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;token single-quoted-string string&quot;&gt;&apos;decimal-separator&apos;&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt; &lt;span class=&quot;token variable&quot;&gt;$decimalSeparator&lt;/span&gt;
    &lt;span class=&quot;token single-quoted-string string&quot;&gt;&apos;thousands-separator&apos;&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt; &lt;span class=&quot;token variable&quot;&gt;$thousandsSeparator&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Now, let&apos;s take the currency format and create a number out of a value in some
code that means almost nothing.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;php&quot;&gt;&lt;pre class=&quot;language-php&quot;&gt;&lt;code class=&quot;language-php&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;// We&apos;ll load the default currency format here. Why not.&lt;/span&gt;
&lt;span class=&quot;token variable&quot;&gt;$currencyFormat&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;getCurrencyFormat&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token variable&quot;&gt;$value&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token variable&quot;&gt;$variableFromOffScreen&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;token comment&quot;&gt;// 1234.56&lt;/span&gt;
&lt;span class=&quot;token comment&quot;&gt;// I have a vague idea of how this should look, but let&apos;s just freehand it&lt;/span&gt;
&lt;span class=&quot;token comment&quot;&gt;// because that is really how we write and nothing could go wrong...&lt;/span&gt;
&lt;span class=&quot;token comment&quot;&gt;// Also, I just looked at number_format here:&lt;/span&gt;
&lt;span class=&quot;token comment&quot;&gt;// https://www.php.net/manual/en/function.number-format.php so I&apos;m going to use&lt;/span&gt;
&lt;span class=&quot;token comment&quot;&gt;// those as the array keys, the other developer who wrote the getCurrencyFormat&lt;/span&gt;
&lt;span class=&quot;token comment&quot;&gt;// function surely used those.&lt;/span&gt;
&lt;span class=&quot;token variable&quot;&gt;$formattedValue&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token variable&quot;&gt;$currencyFormat&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token single-quoted-string string&quot;&gt;&apos;suffix&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;number_format&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token variable&quot;&gt;$value&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token variable&quot;&gt;$currencyFormat&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token single-quoted-string string&quot;&gt;&apos;decimals&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token variable&quot;&gt;$currencyFormat&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token single-quoted-string string&quot;&gt;&apos;dec_point&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token variable&quot;&gt;$currencyFormat&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token single-quoted-string string&quot;&gt;&apos;thousands_sep&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;token variable&quot;&gt;$currencyFormat&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token single-quoted-string string&quot;&gt;&apos;suffix&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;WSOD...&lt;/p&gt;
&lt;p&gt;Ah... Because it was an array, my IDE didn&apos;t auto populate the allowed values
and there was a mismatch in my keys.&lt;/p&gt;
&lt;p&gt;Further, now this code is a one off of how the currency format is used. I could
look up the function and see how each key is being used, but then I have to go
find all the usages if I do want to go back and change thousands-separator to
thousands-sep to match the variables in the number format function.&lt;/p&gt;
&lt;h2&gt;Object Implementation&lt;/h2&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;php&quot;&gt;&lt;pre class=&quot;language-php&quot;&gt;&lt;code class=&quot;language-php&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;/**
 * Currency Format
 */&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;CurrencyFormat&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;token keyword&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;token variable&quot;&gt;$suffix&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token single-quoted-string string&quot;&gt;&apos;$&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;token keyword&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;token variable&quot;&gt;$prefix&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token single-quoted-string string&quot;&gt;&apos; USD&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;token keyword&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;token variable&quot;&gt;$decimals&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token single-quoted-string string&quot;&gt;&apos;2&apos;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;token keyword&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;token variable&quot;&gt;$decPoint&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token single-quoted-string string&quot;&gt;&apos;.&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;token keyword&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;token variable&quot;&gt;$thousandsSep&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token single-quoted-string string&quot;&gt;&apos;,&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

  &lt;span class=&quot;token keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;getSuffix&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; string &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;token variable&quot;&gt;$this&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt;&lt;span class=&quot;token property&quot;&gt;suffix&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;

  &lt;span class=&quot;token keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;setSuffix&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;string &lt;span class=&quot;token variable&quot;&gt;$suffix&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token variable&quot;&gt;$this&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt;&lt;span class=&quot;token property&quot;&gt;suffix&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token variable&quot;&gt;$suffix&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;

  &lt;span class=&quot;token keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;getPrefix&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;token variable&quot;&gt;$this&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt;&lt;span class=&quot;token property&quot;&gt;prefix&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;

  &lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;

&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Now, let&apos;s develop with it.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;php&quot;&gt;&lt;pre class=&quot;language-php&quot;&gt;&lt;code class=&quot;language-php&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;// Object implementation.&lt;/span&gt;
&lt;span class=&quot;token variable&quot;&gt;$currencyFormat&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;CurrencyFormat&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token comment&quot;&gt;// Let&apos;s override the suffix;&lt;/span&gt;
&lt;span class=&quot;token variable&quot;&gt;$currencyFormat&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;setSuffix&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token single-quoted-string string&quot;&gt;&apos;&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;token comment&quot;&gt;// Array.&lt;/span&gt;
&lt;span class=&quot;token comment&quot;&gt;// You could override the suffix in the arguments&lt;/span&gt;
&lt;span class=&quot;token variable&quot;&gt;$currencyFormatArray&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;getCurrencyFormat&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token variable&quot;&gt;$currencyFormatArray&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token single-quoted-string string&quot;&gt;&apos;suffix&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token single-quoted-string string&quot;&gt;&apos;&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;No advantage, really. Now let&apos;s setup a function to format a value as a currency
format.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;php&quot;&gt;&lt;pre class=&quot;language-php&quot;&gt;&lt;code class=&quot;language-php&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;// Object&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;formatValueWithCurrency&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token variable&quot;&gt;$value&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; CurrencyFormat &lt;span class=&quot;token variable&quot;&gt;$currencyFormat&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;token variable&quot;&gt;$currencyFormat&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getPrefix&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;number_format&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token variable&quot;&gt;$value&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token variable&quot;&gt;$currencyFormat&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getDecimals&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token variable&quot;&gt;$currencyFormat&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getDecPoint&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token variable&quot;&gt;$currencyFormat&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getThousandsSep&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;token variable&quot;&gt;$currencyFormat&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getSuffix&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;token comment&quot;&gt;// Or we could add a method to the CurrencyFormat and have it format that value&lt;/span&gt;
&lt;span class=&quot;token comment&quot;&gt;// like:&lt;/span&gt;
&lt;span class=&quot;token variable&quot;&gt;$currencyFormat&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;CurrencyFormat&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token variable&quot;&gt;$formattedValue&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token variable&quot;&gt;$currencyFormat&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;format&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token variable&quot;&gt;$value&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token comment&quot;&gt;// Array Version&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;formatValueWithCurrency&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token variable&quot;&gt;$value&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;array&lt;/span&gt; &lt;span class=&quot;token variable&quot;&gt;$currencyFormat&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;token comment&quot;&gt;// We can&apos;t be sure we are going to get a currency format array, so we have&lt;/span&gt;
  &lt;span class=&quot;token comment&quot;&gt;// to settle for some good ole checks.&lt;/span&gt;
  &lt;span class=&quot;token comment&quot;&gt;// Also, this is gonna get smelly.&lt;/span&gt;
  &lt;span class=&quot;token variable&quot;&gt;$prefix&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token variable&quot;&gt;$currencyFormat&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token single-quoted-string string&quot;&gt;&apos;prefix&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;?&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;?&lt;/span&gt; &lt;span class=&quot;token single-quoted-string string&quot;&gt;&apos;$&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;token variable&quot;&gt;$suffix&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token variable&quot;&gt;$currencyFormat&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token single-quoted-string string&quot;&gt;&apos;suffix&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;?&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;?&lt;/span&gt; &lt;span class=&quot;token single-quoted-string string&quot;&gt;&apos; USD&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;token variable&quot;&gt;$decPoint&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token variable&quot;&gt;$currencyFormat&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token single-quoted-string string&quot;&gt;&apos;decPoint&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;?&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;?&lt;/span&gt; &lt;span class=&quot;token single-quoted-string string&quot;&gt;&apos;.&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;token variable&quot;&gt;$thousandsSeparator&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token variable&quot;&gt;$currencyFormat&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token single-quoted-string string&quot;&gt;&apos;thousandsSep&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;?&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;?&lt;/span&gt; &lt;span class=&quot;token single-quoted-string string&quot;&gt;&apos;,&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;token variable&quot;&gt;$decimals&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token variable&quot;&gt;$currencyFormat&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token single-quoted-string string&quot;&gt;&apos;decimals&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;?&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;?&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

  &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;token variable&quot;&gt;$prefix&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;number_format&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token variable&quot;&gt;$value&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token variable&quot;&gt;$decimals&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token variable&quot;&gt;$decPoint&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token variable&quot;&gt;$thousandsSeparator&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;token variable&quot;&gt;$suffix&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Things to note:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Because we have to check the array value and assume a default, we are now
doubling our locations of default values.&lt;/li&gt;
&lt;li&gt;You could call the getCurrencyFormat array function in the formatValueWithCurrency,
but it is possible that you want to get the currency from a Node or some user
defined value and thus would need to pass the value.&lt;/li&gt;
&lt;li&gt;Arrays are cumbersome and don&apos;t guarantee properties exist. They are simple
buckets you can throw your mistakes into.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt; So please just make it an object if there is any reuse to it and if it is a
piece of standardized data. If you find yourself, constantly calling nested
values on an array, it might be time to refactor into an object.&lt;/p&gt;</content:encoded></item><item><title><![CDATA[The Incredible Hulk]]></title><description><![CDATA[Things done well Cameos (maybe) I made it through the whole thing. So I did well. Things done terribly Being in the MCU. Yes, there are…]]></description><link>http://timwhitney.dev/blog/not-so-incredible-hulk/</link><guid isPermaLink="false">http://timwhitney.dev/blog/not-so-incredible-hulk/</guid><pubDate>Sun, 03 May 2020 00:00:00 GMT</pubDate><content:encoded>&lt;h2&gt;Things done well&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Cameos (maybe)&lt;/li&gt;
&lt;li&gt;I made it through the whole thing. So I did well.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Things done terribly&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Being in the MCU. Yes, there are references to Stark Industries and SHIELD,
and that&apos;s about it.&lt;/li&gt;
&lt;li&gt;Liv Tyler&lt;/li&gt;
&lt;li&gt;Dialog&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Edward Norton was careless:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;He sent an email (unecrypted) with his name and data. Was he trying
to be caught?&lt;/li&gt;
&lt;li&gt;He sent his blood to a person he never met. Who does that?!&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;The general had an injection the whole time and didn&apos;t try it on other people?&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Hulk Guy #2&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Where is his hair?&lt;/li&gt;
&lt;li&gt;Where are his pants?&lt;/li&gt;
&lt;li&gt;Why would you just leave him behind?&lt;/li&gt;
&lt;li&gt;Liv Tyler is simply the worst again... The hulk wasn&apos;t killing the bad guy out of rage. HE WAS KILLING THE BAD GUY! You know, the one that just killed a bunch of people and wreaked havoc
on the city of New York... Oh and the guy that can&apos;t be cured because we just
saw that there was no cure. How daft is your character?&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;</content:encoded></item><item><title><![CDATA[Stop using SASS. It isn’t needed anymore.]]></title><description><![CDATA[Does that sound like clickbait, sure. Is it true, yes! Backstory I am a Drupal developer and have used SASS a fair amount. I have actually…]]></description><link>http://timwhitney.dev/blog/stop-using-sass/</link><guid isPermaLink="false">http://timwhitney.dev/blog/stop-using-sass/</guid><pubDate>Mon, 18 Jun 2018 16:30:00 GMT</pubDate><content:encoded>&lt;p&gt;Does that sound like clickbait, sure. Is it true, yes!&lt;/p&gt;
&lt;h2&gt;Backstory&lt;/h2&gt;
&lt;p&gt;I am a Drupal developer and have used SASS a fair amount. I have actually given talks on how to use SASS and at one point was maintaining a SASS starter template and a Drupal theme that used a complex partial structure.Further, I bought SASS hook line and sinker as the way forward and the answer to short comings of CSS.&lt;/p&gt;
&lt;h2&gt;Problem&lt;/h2&gt;
&lt;p&gt;Here’s the thing: I get your problems. Variables rock. CSS kinda sucks with them. It also sucks remembering what the HEX color of the f-ing green that is used in 5 places, but a really critical five places.&lt;/p&gt;
&lt;p&gt;But the big question are: Do you need what your doing? Does SASS empower the platform or does it just empower you? Is there a difference?&lt;/p&gt;
&lt;p&gt;The answer: By using SASS you are being selfish. You are putting your development ease as the chief priority over the longterm maintenance of the platform.&lt;/p&gt;
&lt;p&gt;I’m sorry, but you know it is true.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Task&lt;/strong&gt;: Go back to a project you worked on 3 years ago and try to make a small sass edit.&lt;/p&gt;
&lt;p&gt;I’ll wait… Still waiting… And still waiting…&lt;/p&gt;
&lt;p&gt;During this time, you have:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;fixed all the libraries that have deprecated or have dependencies updated.&lt;/li&gt;
&lt;li&gt;Fixed all the issues with the node version or ruby version you are using&lt;/li&gt;
&lt;li&gt;tried to remember which partials do what&lt;/li&gt;
&lt;li&gt;Said “fuck” a lot of times because you can’t remember the variables and what they do and you have to refer to that partial (you know the one, _variables.scss)&lt;/li&gt;
&lt;li&gt;Tried to make sure you weren’t breaking anything because you were kind of lazy (a chief proponent for you choosing SASS in the first place)&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;So here is my recommendation: Use small CSS files and attach wisely.&lt;/p&gt;
&lt;p&gt;CSS is still how the web works.&lt;/p&gt;
&lt;p&gt;SASS compiles to CSS. And it is likely to stay that way. You will not ship SASS to production and nor should you. You would be ashamed once you exposed your architecture to those who architect*.&lt;/p&gt;
&lt;p&gt;CSS has gotten good. It isn’t everything and writing it still is laborious. Nesting stuff is just so much better…&lt;/p&gt;
&lt;p&gt;Attach CSS only where necessary, if you are attaching it to everything, you have an issue. There are global styles but there are individual styles as well. If you are displaying a teaser, load the teaser styles! Otherwise, keep them the away from the f-ing dom load.&lt;/p&gt;
&lt;p&gt;Remember: You will not always maintain this project and nor shall you. Your team will change bits and pieces. Isolation and specification is critical in writing good CSS. Don’t make the front end look like garbage because you wanted to use nesting and variables.&lt;/p&gt;
&lt;p&gt;*Those who architect SASS are full of the same BS you are. They just have a strong opinions and maybe a louder voice.&lt;/p&gt;</content:encoded></item><item><title><![CDATA[Bread Crumbs in Drupal 8 are Path Driven.]]></title><description><![CDATA[There are some great posts about breadcrumbs in Drupal 8: Drupal 8 Breadcrumbs - Add the Current Page - Greg Boggs D8FTW: Breadcrumbs That…]]></description><link>http://timwhitney.dev/blog/drupal-breadcrumbs/</link><guid isPermaLink="false">http://timwhitney.dev/blog/drupal-breadcrumbs/</guid><pubDate>Thu, 22 Sep 2016 16:30:00 GMT</pubDate><content:encoded>&lt;p&gt;There are some great posts about breadcrumbs in Drupal 8:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://www.gregboggs.com/drupal8-breadcrumbs/&quot;&gt;Drupal 8 Breadcrumbs - Add the Current Page - Greg Boggs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.palantir.net/blog/d8ftw-breadcrumbs-work&quot;&gt;D8FTW: Breadcrumbs That Work&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;But both of these articles are missing a critical piece: The path system drives
the breadcrumbs.&lt;/p&gt;
&lt;p&gt;Let&apos;s say we have two nodes: Node1 and Node2. In all the menus Node2 is nested under Node1… but in the breadcrumbs only “Home” shows. Por que? That is because the menus are no longer dictating the magic of breadcrumbs, the paths are.&lt;/p&gt;
&lt;p&gt;Thus, if Node1 has the alias /node1 and Node2 has an alias of /node2, the breadcrumbs won’t nest. However, if Node2 has an alias of /node1/node2 the breadcrumbs will display as nested. On Node2, you’ll be presented with “Home &gt;&gt; Node1”.&lt;/p&gt;
&lt;p&gt;Further Things: (&lt;a href=&quot;https://www.drupal.org/node/743366&quot;&gt;https://www.drupal.org/node/743366&lt;/a&gt;)&lt;/p&gt;
&lt;p&gt;Helpful snippet for breadcrumb.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;php&quot;&gt;&lt;pre class=&quot;language-php&quot;&gt;&lt;code class=&quot;language-php&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;THEMENAME_preprocess_breadcrumb&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;token variable&quot;&gt;$variables&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;token comment&quot;&gt;// Remove &quot;Home&quot; link and add custom prepended links.&lt;/span&gt;
  &lt;span class=&quot;token variable&quot;&gt;$breadcrumbs&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;array_shift&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token variable&quot;&gt;$variables&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token single-quoted-string string&quot;&gt;&apos;breadcrumb&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;token function&quot;&gt;array_unshift&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token variable&quot;&gt;$variables&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token single-quoted-string string&quot;&gt;&apos;breadcrumb&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;array&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;
      &lt;span class=&quot;token single-quoted-string string&quot;&gt;&apos;text&apos;&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token single-quoted-string string&quot;&gt;&apos;Site&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;token single-quoted-string string&quot;&gt;&apos;url&apos;&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt; &lt;span class=&quot;token single-quoted-string string&quot;&gt;&apos;http://example.com&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;array&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;
      &lt;span class=&quot;token single-quoted-string string&quot;&gt;&apos;text&apos;&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt; &lt;span class=&quot;token single-quoted-string string&quot;&gt;&apos;Drupal Subsite&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;token single-quoted-string string&quot;&gt;&apos;url&apos;&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt; &lt;span class=&quot;token single-quoted-string string&quot;&gt;&apos;/&apos;&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;token comment&quot;&gt;// Add current title of page.&lt;/span&gt;
  &lt;span class=&quot;token variable&quot;&gt;$request&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; \&lt;span class=&quot;token package&quot;&gt;Drupal&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;request&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;token variable&quot;&gt;$route_match&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; \&lt;span class=&quot;token package&quot;&gt;Drupal&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;routeMatch&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;token variable&quot;&gt;$page_title&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; \&lt;span class=&quot;token package&quot;&gt;Drupal&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;service&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token single-quoted-string string&quot;&gt;&apos;title_resolver&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getTitle&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token variable&quot;&gt;$request&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token variable&quot;&gt;$route_match&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getRouteObject&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;token variable&quot;&gt;$variables&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token single-quoted-string string&quot;&gt;&apos;breadcrumb&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;array&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;
    &lt;span class=&quot;token single-quoted-string string&quot;&gt;&apos;text&apos;&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt; &lt;span class=&quot;token variable&quot;&gt;$page_title&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</content:encoded></item><item><title><![CDATA[Extending Twig Templates.]]></title><description><![CDATA[One of the sessions I enjoyed the most was Twig: Friendly Curl Braces Invade Your Templates by KNP Labs Ryan Weaver. He discussed a lot of…]]></description><link>http://timwhitney.dev/blog/extending-twig-templates/</link><guid isPermaLink="false">http://timwhitney.dev/blog/extending-twig-templates/</guid><pubDate>Fri, 31 Oct 2014 16:30:00 GMT</pubDate><content:encoded>&lt;p&gt;One of the sessions I enjoyed the most was &lt;a href=&quot;https://austin2014.drupal.org/session/twig-friendly-curl-braces-invade-your-templates&quot;&gt;Twig: Friendly Curl Braces Invade Your Templates by KNP Labs Ryan Weaver&lt;/a&gt;. He discussed a lot of wonderful advantages to the twig templating system including: Simplified markup and declarations, Filters, and extensibility. For the first two of that list, watch his presentation however for extensibility, please read on.
Extendable Templates&lt;/p&gt;
&lt;p&gt;In Drupal, we regularly have to override a template for some reason or another, and that template might need to only have one line changed. In Drupal 7, you would create a new file, ex: page—blog.tpl.php, and then copy all of page.tpl.php, and override. This works great until you have 5 page template overrides and you need to override the mark up in all of them. In Drupal 8, twig allows for you to “extend” a template. This means that in the page—blog.html.twig, you would have the line&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;{% extends ‘themes/THEMENAME/templates/system/page.html.twig’ %}&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Now, out of the box, extending core templates is only so good, because nothing is wrapped in a twig-block. What we need to do is edit the template and start wrapping the components we will want to extend in blocks.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;php&quot;&gt;&lt;pre class=&quot;language-php&quot;&gt;&lt;code class=&quot;language-php&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;token shell-comment comment&quot;&gt;# Core Example #}&lt;/span&gt;
&lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;div &lt;span class=&quot;token keyword&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;”l&lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt;content”&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; title_prefix &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; title &lt;span class=&quot;token operator&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;h1 &lt;span class=&quot;token keyword&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;”page&lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt;title”&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; title &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;/&lt;/span&gt;h1&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;endif&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; title_suffix &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; tabs &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; action_links &lt;span class=&quot;token operator&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;nav &lt;span class=&quot;token keyword&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;”action&lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt;links”&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; action_links &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;/&lt;/span&gt;nav&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;endif&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; page&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;content &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;/&lt;/span&gt;div&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;token shell-comment comment&quot;&gt;# /.l-content #}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Notice above how no twig-blocks are present&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;php&quot;&gt;&lt;pre class=&quot;language-php&quot;&gt;&lt;code class=&quot;language-php&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;token shell-comment comment&quot;&gt;# Wrapped Example #}{% block content %} {# This lets us change our content block #}&lt;/span&gt;
  &lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;div &lt;span class=&quot;token keyword&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;”l&lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt;content”&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;%&lt;/span&gt; block title &lt;span class=&quot;token operator&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;token shell-comment comment&quot;&gt;# Lets say we want to move the title elsewhere #}&lt;/span&gt;
      &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; title_prefix &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
      &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; title &lt;span class=&quot;token operator&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;h1 &lt;span class=&quot;token keyword&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;”page&lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt;title”&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; title &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;/&lt;/span&gt;h1&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt;
      &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;endif&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
      &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; title_suffix &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;%&lt;/span&gt; endblock &lt;span class=&quot;token operator&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;%&lt;/span&gt; block tabs &lt;span class=&quot;token operator&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;token shell-comment comment&quot;&gt;# Sometimes we don’t want tabs #}&lt;/span&gt;
      &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; tabs &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;%&lt;/span&gt; endblock &lt;span class=&quot;token operator&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;%&lt;/span&gt; block actionLinks &lt;span class=&quot;token operator&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;token shell-comment comment&quot;&gt;# “Nahbra, action links ain’t me”}&lt;/span&gt;
      &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; action_links &lt;span class=&quot;token operator&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;nav &lt;span class=&quot;token keyword&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;”action&lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt;links”&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; action_links &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;/&lt;/span&gt;nav&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt;
      &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;endif&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;%&lt;/span&gt; endblock &lt;span class=&quot;token operator&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; page&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;content &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;/&lt;/span&gt;div&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;token shell-comment comment&quot;&gt;# /.l-content #}&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;%&lt;/span&gt; endblock &lt;span class=&quot;token operator&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;So far, nothing to crazy is happening. However, now imagine you want to extend the template and hide the title. All you would have to write is somethings like this:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;php&quot;&gt;&lt;pre class=&quot;language-php&quot;&gt;&lt;code class=&quot;language-php&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;token shell-comment comment&quot;&gt;# Extending the page template to override the title #}&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;extends&lt;/span&gt; ‘themes&lt;span class=&quot;token operator&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;token constant&quot;&gt;THEMENAME&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;/&lt;/span&gt;templates&lt;span class=&quot;token operator&quot;&gt;/&lt;/span&gt;page&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;html&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;twig’ &lt;span class=&quot;token operator&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;%&lt;/span&gt; block title &lt;span class=&quot;token operator&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;token single-quoted-string string&quot;&gt;&apos;Nice New Title for the whole world to see.&apos;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;|&lt;/span&gt;t &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;%&lt;/span&gt; endblock &lt;span class=&quot;token operator&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Notice: No markup from the original template needs to be copied, just the block that you want to extend.
Complex Extending&lt;/p&gt;
&lt;p&gt;What if you take the above example and you want to extend the content, but you want to keep all the content of the block, except you want to change the wrapper “.l-content” to “blog-content”. If you wrote:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;php&quot;&gt;&lt;pre class=&quot;language-php&quot;&gt;&lt;code class=&quot;language-php&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;token shell-comment comment&quot;&gt;# Extending the page template to override the wrapper of content #}&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;extends&lt;/span&gt; ‘themes&lt;span class=&quot;token operator&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;token constant&quot;&gt;THEMENAME&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;/&lt;/span&gt;templates&lt;span class=&quot;token operator&quot;&gt;/&lt;/span&gt;page&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;html&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;twig’ &lt;span class=&quot;token operator&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;%&lt;/span&gt; block content &lt;span class=&quot;token operator&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;div &lt;span class=&quot;token keyword&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;”blog&lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt;wrapper”&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; page&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;content &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;/&lt;/span&gt;div&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;%&lt;/span&gt; endblock &lt;span class=&quot;token operator&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The above would cause you to loose the title, action links, and tabs. Only printing out the page.content. Not the most desirable.&lt;/p&gt;
&lt;p&gt;After this, you should try to use the parent() function, this will grab the content of the parent block. The only limit of this is that the div.l-content would still be wrapping the content of the block.&lt;/p&gt;
&lt;p&gt;To achieve the removal and replacement of the div.l-content, you’ll need a small amount of trickery.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;php&quot;&gt;&lt;pre class=&quot;language-php&quot;&gt;&lt;code class=&quot;language-php&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;token shell-comment comment&quot;&gt;# Extend it like its hot #} {% block content %} {# This lets us change our content block #}&lt;/span&gt;
 &lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;div &lt;span class=&quot;token keyword&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;”blog&lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt;wrapper”&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt;
 &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;block&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;title&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
 &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;block&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;tabs&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
 &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;block&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;actionLinks&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
 &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; page&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;content &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
 &lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;/&lt;/span&gt;div&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;token shell-comment comment&quot;&gt;# /.blog-wrapper #}&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;%&lt;/span&gt; endblock &lt;span class=&quot;token operator&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This will print the parent blocks content and then print page content as desired.
Overall&lt;/p&gt;
&lt;p&gt;This is clearly a lot easier than it was with phptemplate engine and it allows for you to quickly get the desired results. If you find a flaw want more, feel free to leave a comment. To read more about extending checkout the twig documentation.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Originally published at www.newmediadenver.com.&lt;/em&gt;&lt;/p&gt;</content:encoded></item><item><title><![CDATA[Logo Size: Please stop.]]></title><description><![CDATA[A lot of people feel that their logo is the most important part of their site. And there is a point to this, it is that their logo is the…]]></description><link>http://timwhitney.dev/blog/logo-size/</link><guid isPermaLink="false">http://timwhitney.dev/blog/logo-size/</guid><pubDate>Tue, 21 Oct 2014 16:30:00 GMT</pubDate><content:encoded>&lt;p&gt;A lot of people feel that their logo is the most important part of their site. And there is a point to this, it is that their logo is the only thing that represents their brand at this point.&lt;/p&gt;
&lt;p&gt;However, it is important that a logo is not your website. It may come as a surprise, but you don’t need a giant header with a giant logo to represent your brand. Your brand should be represented by the content, as well as, look and feel of the page. If these things are done properly, they will take place of the logo and deprecate the need of it.&lt;/p&gt;
&lt;p&gt;The logo size has always been a design issue. Companies want the logo as big as possible to represent the brand, but the logo is not the brand. The brand is the brand. A brand consists of the products, the people and the atmosphere of the company. A brand is trusted, a logo is not. A logo represents the brand but alone isn’t a brand.&lt;/p&gt;
&lt;p&gt;It is important to notice the difference between a logo and brand because people do not come to your website to look at a logo and learn about the details of the logo. They come to the website to learn about your brand.&lt;/p&gt;
&lt;p&gt;Shrink your logo and give better content. Everyone will be happier and the user experience will be more tailored to the user&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Originally published at www.newmediadenver.com.&lt;/em&gt;&lt;/p&gt;</content:encoded></item><item><title><![CDATA[Walter White’s Blue Stuff: The Purity of Your Site]]></title><description><![CDATA[Breaking Bad is a series on AMC that deals with an ex-teacher turned meth chemist. During the series of the show, the lead character, Walter…]]></description><link>http://timwhitney.dev/blog/walter-white/</link><guid isPermaLink="false">http://timwhitney.dev/blog/walter-white/</guid><pubDate>Tue, 21 Oct 2014 16:30:00 GMT</pubDate><content:encoded>&lt;p&gt;Breaking Bad is a series on AMC that deals with an ex-teacher turned meth chemist. During the series of the show, the lead character, Walter, goes throught the trials and tribulations that are involved in the meth game. During this time, he runs into a competitor, Gale, who tries to mimic the quality of his product. When Gale’s product is not as pure as Walter’s, he says this:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;“I can guarantee to you a purity of 96%. I’m proud of that figure. it’s a hard
earned figure, 96. However, this other product is 99. Maybe even.. A touch
beyond that. That last three percent… it may not sound like a lot. But it is.
It’s tremendous. It’s a tremendous… Gulf.”&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;Real Life:&lt;/h2&gt;
&lt;p&gt;Websites are not meth and the business is not nearly as lucrative, destructive, etc. But the issue that is occuring in small/medium/large dev shops, small/medium/large businesses, as well as, one dev contract, is that they are settling for or pressured into 90% purity and are unable to deliver to the 99% purity that the market deserves.&lt;/p&gt;
&lt;h2&gt;The Problem:&lt;/h2&gt;
&lt;p&gt;Projects are on a deadline. Projects have features. Clients want stuff. Devs want and don’t want to develop certain features. Developing those may take longer, may have complications, may be quicker but are often longer. What this means is that QA isn’t delivered in a timely manner, isn’t completely done, is handed to the client too early and/or just isn’t done at all.&lt;/p&gt;
&lt;p&gt;What that means is that the site is not complete. Yes, you may have handed it over to the client and yes it may be live. But are you really proud of it, or do you know the secret issues that about 1/100 people may experience, or on a larger scale, 5/100 may experience, or 10/100 may experience it?&lt;/p&gt;
&lt;p&gt;You now have an exeperience that is 99%, 95%, and 90%, respectively. That should not be acceptable in the terms of a website. But currently it is, because bills need to paid, projects need to be completed, websites need to be pushed out the door.&lt;/p&gt;
&lt;h2&gt;The Solution:&lt;/h2&gt;
&lt;p&gt;The solution to this is not easy, surprise. But it should be no surprise that the solution is not found in one part of the process of discovery, development, and QA, but is found along the whole process. And the process needs to be improved iteratively. Your process is not perfect and can always use improvement.&lt;/p&gt;
&lt;p&gt;With this mentality, projects in the future can continue to be looked at and improved to find the weaknesses of where a project may have succumbed to “impurity”. During discovery, it is possible that you missed a clients true wish of functionality, or during design, there were inconsistencies that led to a prolonged dev process, or during dev you missed a piece/detail from the design. Or more likely, during all those processes, those “can be addressed during QA”.&lt;/p&gt;
&lt;p&gt;The mentality that something can be addressed during QA needs to die. It creeps the scope. It leaves the projects unfinished. It often creates volatile relationships with the client/devs/PMs/sales/etc. It turns agile into waterfall. QA is not a sprint, it is a part of all sprints. In other words, that mentality will prolong your project and almost guarantees a purity less than 98%.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Originally published at www.newmediadenver.com.&lt;/em&gt;&lt;/p&gt;</content:encoded></item></channel></rss>